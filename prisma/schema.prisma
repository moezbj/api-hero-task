generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  role         ROLE           @default(ADMIN)
  isActive     Boolean        @default(true)
  email        String         @unique
  password     String
  firstName    String
  lastName     String
  image        String?
  company      Company?
  participant  Participant[]
  projects     Project[]
  WorkSpace    WorkSpace[]
  Collaborator Collaborator[]
}

model WorkSpace {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String
  image       String?
  admin        User           @relation(fields: [adminId], references: [id])
  adminId      Int
  collaborator Collaborator[]
  projects     Project[]
}

model Collaborator {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id])
  userId      Int
  description String
  WorkSpace   WorkSpace? @relation(fields: [workSpaceId], references: [id])
  workSpaceId Int?
}

model Project {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  title       String
  description String
  delivered   Boolean       @default(false)
  participant Participant[]
  owner       User          @relation(fields: [ownerId], references: [id])
  ownerId     Int
  WorkSpace   WorkSpace?    @relation(fields: [workSpaceId], references: [id])
  workSpaceId Int?
}

model Participant {
  id       Int     @id @default(autoincrement())
  projetId Int
  userId   Int
  projet   Project @relation(fields: [projetId], references: [id])
  user     User    @relation(fields: [userId], references: [id])

  @@unique([projetId, userId])
}

model Token {
  id      Int        @id @default(autoincrement())
  token   String
  user    Int
  expires DateTime
  type    TOKEN_TYPE
}

model Company {
  name   String
  userId Int    @unique
  user   User   @relation(fields: [userId], references: [id])
}

enum ROLE {
  ADMIN
  PARTICIPANT
}

enum TOKEN_TYPE {
  REFRESH
  INITIALIZE
  FORGET
  CONFIRM
}
